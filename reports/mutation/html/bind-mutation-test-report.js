document.querySelector('mutation-test-report-app').report = {"files":{"/home/antoine/Bureau/MyGitHub/tp-jest/src/book.repository.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":6,"line":8},"start":{"column":21,"line":6}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1","location":{"end":{"column":6,"line":12},"start":{"column":17,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"6","location":{"end":{"column":41,"line":27},"start":{"column":34,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":10,"line":30},"start":{"column":52,"line":27}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"2","location":{"end":{"column":28,"line":11},"start":{"column":21,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3","location":{"end":{"column":6,"line":20},"start":{"column":21,"line":17}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"9","location":{"end":{"column":6,"line":46},"start":{"column":29,"line":38}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"10","location":{"end":{"column":21,"line":39},"start":{"column":19,"line":39}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"12","location":{"end":{"column":10,"line":44},"start":{"column":52,"line":40}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"13","location":{"end":{"column":38,"line":41},"start":{"column":19,"line":41}},"mutatorName":"WhileStatement","replacement":"false","status":"Survived"},{"id":"14","location":{"end":{"column":38,"line":41},"start":{"column":19,"line":41}},"mutatorName":"BinaryExpression","replacement":"i.name !== bookName","status":"Survived"},{"id":"4","location":{"end":{"column":40,"line":18},"start":{"column":33,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":14,"line":43},"start":{"column":40,"line":41}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"5","location":{"end":{"column":6,"line":32},"start":{"column":21,"line":25}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"16","location":{"end":{"column":32,"line":45},"start":{"column":16,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":28,"line":29},"start":{"column":19,"line":29}},"mutatorName":"BinaryExpression","replacement":"sum - tmp","status":"Survived"},{"id":"11","location":{"end":{"column":41,"line":40},"start":{"column":34,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"class BookRepository {\n\n    /**\n     * @param db\n     */\n    constructor(db) {\n        this.db = db;\n    }\n\n    save (book) {\n        this.db.get('books').push(book).write();\n    }\n\n    /**\n     * Nombre total de livre\n     */\n    getTotalCount() {\n        let count = this.db.get('books').size().value();\n        return count;\n    }\n\n    /**\n     * Somme du prix de tous les livre\n     */\n    getTotalPrice() {\n        let sum = 0.0;\n        for(let i of this.db.get('books').value()) {\n            let tmp = i.price;\n            sum = sum + tmp;\n        };\n        return sum;\n    }\n\n\n    /**\n     * Retourne un livre\n     */\n    getBookByName(bookName) {\n        let tmp = \"\";\n        for(let i of this.db.get('books').value()) {\n            while(i.name === bookName) {\n                return i;\n            }\n        }\n        return \"book not found\";\n    }\n\n    /**\n     * Nombre de livre ajoutÃ© par mois\n     *\n     *  [\n     *      {\n     *          year: 2017,\n     *          month, 2,\n     *          count, 129,\n     *          count_cumulative: 129\n     *      },\n     *      {\n     *          year: 2017,\n     *          month, 3,\n     *          count, 200,\n     *          count_cumulative: 329\n     *      },\n     *      ....\n     *  ]\n     */\n    getCountBookAddedByMont(bookName) {\n\n    }\n\n}\n\n\nmodule.exports = BookRepository;\n"},"/home/antoine/Bureau/MyGitHub/tp-jest/src/interval.js":{"language":"javascript","mutants":[{"id":"17","location":{"end":{"column":6,"line":5},"start":{"column":29,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"18","location":{"end":{"column":6,"line":11},"start":{"column":16,"line":9}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"23","location":{"end":{"column":19,"line":10},"start":{"column":16,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"22","location":{"end":{"column":32,"line":10},"start":{"column":16,"line":10}},"mutatorName":"BinaryExpression","replacement":"\"[\" - this.start","status":"Survived"},{"id":"19","location":{"end":{"column":55,"line":10},"start":{"column":16,"line":10}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start + \",\" + this.end - \"]\"","status":"Survived"},{"id":"21","location":{"end":{"column":38,"line":10},"start":{"column":16,"line":10}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start - \",\"","status":"Survived"},{"id":"20","location":{"end":{"column":49,"line":10},"start":{"column":16,"line":10}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start + \",\" - this.end","status":"Survived"},{"id":"24","location":{"end":{"column":38,"line":10},"start":{"column":35,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"26","location":{"end":{"column":6,"line":29},"start":{"column":24,"line":27}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":55,"line":10},"start":{"column":52,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"27","location":{"end":{"column":70,"line":28},"start":{"column":16,"line":28}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || this.start < interval.end","status":"Survived"},{"id":"32","location":{"end":{"column":41,"line":28},"start":{"column":16,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"31","location":{"end":{"column":41,"line":28},"start":{"column":16,"line":28}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Survived"},{"id":"28","location":{"end":{"column":70,"line":28},"start":{"column":16,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"29","location":{"end":{"column":70,"line":28},"start":{"column":16,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"33","location":{"end":{"column":41,"line":28},"start":{"column":16,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"30","location":{"end":{"column":41,"line":28},"start":{"column":16,"line":28}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"34","location":{"end":{"column":70,"line":28},"start":{"column":45,"line":28}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.end","status":"Survived"},{"id":"35","location":{"end":{"column":70,"line":28},"start":{"column":45,"line":28}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.end","status":"Survived"},{"id":"37","location":{"end":{"column":70,"line":28},"start":{"column":45,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"36","location":{"end":{"column":70,"line":28},"start":{"column":45,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"38","location":{"end":{"column":6,"line":55},"start":{"column":24,"line":47}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"40","location":{"end":{"column":68,"line":49},"start":{"column":12,"line":49}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"39","location":{"end":{"column":68,"line":49},"start":{"column":12,"line":49}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"41","location":{"end":{"column":68,"line":49},"start":{"column":12,"line":49}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start || this.end >= interval.end","status":"Survived"},{"id":"42","location":{"end":{"column":40,"line":49},"start":{"column":12,"line":49}},"mutatorName":"BinaryExpression","replacement":"this.start < interval.start","status":"Survived"},{"id":"43","location":{"end":{"column":40,"line":49},"start":{"column":12,"line":49}},"mutatorName":"BinaryExpression","replacement":"this.start > interval.start","status":"Survived"},{"id":"45","location":{"end":{"column":40,"line":49},"start":{"column":12,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"48","location":{"end":{"column":68,"line":49},"start":{"column":44,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"44","location":{"end":{"column":40,"line":49},"start":{"column":12,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"47","location":{"end":{"column":68,"line":49},"start":{"column":44,"line":49}},"mutatorName":"BinaryExpression","replacement":"this.end < interval.end","status":"Survived"},{"id":"46","location":{"end":{"column":68,"line":49},"start":{"column":44,"line":49}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.end","status":"Survived"},{"id":"50","location":{"end":{"column":10,"line":51},"start":{"column":69,"line":49}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":68,"line":49},"start":{"column":44,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"51","location":{"end":{"column":23,"line":50},"start":{"column":19,"line":50}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Survived"},{"id":"53","location":{"end":{"column":24,"line":52},"start":{"column":19,"line":52}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Survived"},{"id":"54","location":{"end":{"column":6,"line":102},"start":{"column":21,"line":73}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"52","location":{"end":{"column":10,"line":53},"start":{"column":16,"line":51}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":68,"line":77},"start":{"column":12,"line":77}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"56","location":{"end":{"column":68,"line":77},"start":{"column":12,"line":77}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"57","location":{"end":{"column":68,"line":77},"start":{"column":12,"line":77}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start && this.start >= interval.end","status":"Survived"},{"id":"58","location":{"end":{"column":38,"line":77},"start":{"column":12,"line":77}},"mutatorName":"BinaryExpression","replacement":"this.end < interval.start","status":"Survived"},{"id":"59","location":{"end":{"column":38,"line":77},"start":{"column":12,"line":77}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start","status":"Killed"},{"id":"60","location":{"end":{"column":38,"line":77},"start":{"column":12,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"61","location":{"end":{"column":38,"line":77},"start":{"column":12,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"62","location":{"end":{"column":68,"line":77},"start":{"column":42,"line":77}},"mutatorName":"BinaryExpression","replacement":"this.start > interval.end","status":"Survived"},{"id":"64","location":{"end":{"column":68,"line":77},"start":{"column":42,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"63","location":{"end":{"column":68,"line":77},"start":{"column":42,"line":77}},"mutatorName":"BinaryExpression","replacement":"this.start < interval.end","status":"Killed"},{"id":"65","location":{"end":{"column":68,"line":77},"start":{"column":42,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"66","location":{"end":{"column":10,"line":81},"start":{"column":70,"line":77}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"68","location":{"end":{"column":42,"line":82},"start":{"column":17,"line":82}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"67","location":{"end":{"column":42,"line":82},"start":{"column":17,"line":82}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"70","location":{"end":{"column":42,"line":82},"start":{"column":17,"line":82}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"69","location":{"end":{"column":42,"line":82},"start":{"column":17,"line":82}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"71","location":{"end":{"column":10,"line":86},"start":{"column":44,"line":82}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"72","location":{"end":{"column":42,"line":87},"start":{"column":17,"line":87}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"74","location":{"end":{"column":42,"line":87},"start":{"column":17,"line":87}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Survived"},{"id":"73","location":{"end":{"column":42,"line":87},"start":{"column":17,"line":87}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"75","location":{"end":{"column":42,"line":87},"start":{"column":17,"line":87}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Survived"},{"id":"76","location":{"end":{"column":10,"line":91},"start":{"column":44,"line":87}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"79","location":{"end":{"column":73,"line":92},"start":{"column":17,"line":92}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start || this.end >= interval.end","status":"Survived"},{"id":"78","location":{"end":{"column":73,"line":92},"start":{"column":17,"line":92}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"77","location":{"end":{"column":73,"line":92},"start":{"column":17,"line":92}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"82","location":{"end":{"column":45,"line":92},"start":{"column":17,"line":92}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"80","location":{"end":{"column":45,"line":92},"start":{"column":17,"line":92}},"mutatorName":"BinaryExpression","replacement":"this.start < interval.start","status":"Survived"},{"id":"81","location":{"end":{"column":45,"line":92},"start":{"column":17,"line":92}},"mutatorName":"BinaryExpression","replacement":"this.start > interval.start","status":"Survived"},{"id":"83","location":{"end":{"column":45,"line":92},"start":{"column":17,"line":92}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"84","location":{"end":{"column":73,"line":92},"start":{"column":49,"line":92}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.end","status":"Survived"},{"id":"86","location":{"end":{"column":73,"line":92},"start":{"column":49,"line":92}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"87","location":{"end":{"column":73,"line":92},"start":{"column":49,"line":92}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"85","location":{"end":{"column":73,"line":92},"start":{"column":49,"line":92}},"mutatorName":"BinaryExpression","replacement":"this.end < interval.end","status":"Survived"},{"id":"89","location":{"end":{"column":73,"line":96},"start":{"column":17,"line":96}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"90","location":{"end":{"column":73,"line":96},"start":{"column":17,"line":96}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"92","location":{"end":{"column":45,"line":96},"start":{"column":17,"line":96}},"mutatorName":"BinaryExpression","replacement":"interval.start < this.start","status":"Survived"},{"id":"88","location":{"end":{"column":10,"line":95},"start":{"column":75,"line":92}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"91","location":{"end":{"column":73,"line":96},"start":{"column":17,"line":96}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start || interval.end >= this.end","status":"Survived"},{"id":"93","location":{"end":{"column":45,"line":96},"start":{"column":17,"line":96}},"mutatorName":"BinaryExpression","replacement":"interval.start > this.start","status":"Survived"},{"id":"95","location":{"end":{"column":45,"line":96},"start":{"column":17,"line":96}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"94","location":{"end":{"column":45,"line":96},"start":{"column":17,"line":96}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"97","location":{"end":{"column":73,"line":96},"start":{"column":49,"line":96}},"mutatorName":"BinaryExpression","replacement":"interval.end < this.end","status":"Survived"},{"id":"98","location":{"end":{"column":73,"line":96},"start":{"column":49,"line":96}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"96","location":{"end":{"column":73,"line":96},"start":{"column":49,"line":96}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.end","status":"Survived"},{"id":"99","location":{"end":{"column":73,"line":96},"start":{"column":49,"line":96}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"100","location":{"end":{"column":10,"line":99},"start":{"column":75,"line":96}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"101","location":{"end":{"column":6,"line":142},"start":{"column":28,"line":120}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"102","location":{"end":{"column":75,"line":124},"start":{"column":13,"line":124}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"103","location":{"end":{"column":75,"line":124},"start":{"column":13,"line":124}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"105","location":{"end":{"column":42,"line":124},"start":{"column":13,"line":124}},"mutatorName":"BinaryExpression","replacement":"this.end - interval.start <= 0","status":"Survived"},{"id":"104","location":{"end":{"column":75,"line":124},"start":{"column":13,"line":124}},"mutatorName":"BinaryExpression","replacement":"this.end - interval.start < 0 && interval.end - this.start < 0","status":"Survived"},{"id":"107","location":{"end":{"column":42,"line":124},"start":{"column":13,"line":124}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"106","location":{"end":{"column":42,"line":124},"start":{"column":13,"line":124}},"mutatorName":"BinaryExpression","replacement":"this.end - interval.start >= 0","status":"Survived"},{"id":"110","location":{"end":{"column":75,"line":124},"start":{"column":46,"line":124}},"mutatorName":"BinaryExpression","replacement":"interval.end - this.start <= 0","status":"Survived"},{"id":"108","location":{"end":{"column":42,"line":124},"start":{"column":13,"line":124}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"109","location":{"end":{"column":37,"line":124},"start":{"column":14,"line":124}},"mutatorName":"BinaryExpression","replacement":"this.end + interval.start","status":"Survived"},{"id":"111","location":{"end":{"column":75,"line":124},"start":{"column":46,"line":124}},"mutatorName":"BinaryExpression","replacement":"interval.end - this.start >= 0","status":"Survived"},{"id":"113","location":{"end":{"column":75,"line":124},"start":{"column":46,"line":124}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"112","location":{"end":{"column":75,"line":124},"start":{"column":46,"line":124}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"115","location":{"end":{"column":10,"line":126},"start":{"column":78,"line":124}},"mutatorName":"Block","replacement":"{} // cas oÃ¹ les 2 intervals ont un point en commun","status":"Survived"},{"id":"114","location":{"end":{"column":70,"line":124},"start":{"column":47,"line":124}},"mutatorName":"BinaryExpression","replacement":"interval.end + this.start","status":"Survived"},{"id":"116","location":{"end":{"column":49,"line":128},"start":{"column":18,"line":128}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"117","location":{"end":{"column":49,"line":128},"start":{"column":18,"line":128}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"118","location":{"end":{"column":49,"line":128},"start":{"column":18,"line":128}},"mutatorName":"BinaryExpression","replacement":"this.end - interval.start !== 0","status":"Survived"},{"id":"120","location":{"end":{"column":10,"line":130},"start":{"column":52,"line":128}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"119","location":{"end":{"column":42,"line":128},"start":{"column":19,"line":128}},"mutatorName":"BinaryExpression","replacement":"this.end + interval.start","status":"Survived"},{"id":"121","location":{"end":{"column":49,"line":131},"start":{"column":18,"line":131}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"122","location":{"end":{"column":49,"line":131},"start":{"column":18,"line":131}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"125","location":{"end":{"column":10,"line":133},"start":{"column":52,"line":131}},"mutatorName":"Block","replacement":"{} // cas interection : THIS devant Interval","status":"Survived"},{"id":"124","location":{"end":{"column":42,"line":131},"start":{"column":19,"line":131}},"mutatorName":"BinaryExpression","replacement":"this.start + interval.end","status":"Survived"},{"id":"123","location":{"end":{"column":49,"line":131},"start":{"column":18,"line":131}},"mutatorName":"BinaryExpression","replacement":"this.start - interval.end !== 0","status":"Survived"},{"id":"126","location":{"end":{"column":47,"line":135},"start":{"column":18,"line":135}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"127","location":{"end":{"column":47,"line":135},"start":{"column":18,"line":135}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"128","location":{"end":{"column":47,"line":135},"start":{"column":18,"line":135}},"mutatorName":"BinaryExpression","replacement":"this.end - interval.start >= 0","status":"Survived"},{"id":"129","location":{"end":{"column":47,"line":135},"start":{"column":18,"line":135}},"mutatorName":"BinaryExpression","replacement":"this.end - interval.start <= 0","status":"Survived"},{"id":"130","location":{"end":{"column":42,"line":135},"start":{"column":19,"line":135}},"mutatorName":"BinaryExpression","replacement":"this.end + interval.start","status":"Survived"},{"id":"131","location":{"end":{"column":10,"line":137},"start":{"column":50,"line":135}},"mutatorName":"Block","replacement":"{} // cas intersection : Interval devant THIS","status":"Survived"},{"id":"134","location":{"end":{"column":47,"line":139},"start":{"column":18,"line":139}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"132","location":{"end":{"column":51,"line":136},"start":{"column":28,"line":136}},"mutatorName":"BinaryExpression","replacement":"this.end + interval.start","status":"Survived"},{"id":"133","location":{"end":{"column":47,"line":139},"start":{"column":18,"line":139}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"135","location":{"end":{"column":47,"line":139},"start":{"column":18,"line":139}},"mutatorName":"BinaryExpression","replacement":"interval.start - this.end >= 0","status":"Survived"},{"id":"137","location":{"end":{"column":42,"line":139},"start":{"column":19,"line":139}},"mutatorName":"BinaryExpression","replacement":"interval.start + this.end","status":"Survived"},{"id":"136","location":{"end":{"column":47,"line":139},"start":{"column":18,"line":139}},"mutatorName":"BinaryExpression","replacement":"interval.start - this.end <= 0","status":"Survived"},{"id":"138","location":{"end":{"column":10,"line":141},"start":{"column":50,"line":139}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"139","location":{"end":{"column":51,"line":140},"start":{"column":28,"line":140}},"mutatorName":"BinaryExpression","replacement":"interval.end + this.start","status":"Survived"},{"id":"140","location":{"end":{"column":6,"line":193},"start":{"column":25,"line":160}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"142","location":{"end":{"column":77,"line":164},"start":{"column":13,"line":164}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"143","location":{"end":{"column":77,"line":164},"start":{"column":13,"line":164}},"mutatorName":"BinaryExpression","replacement":"interval.start - this.end >= 0 && this.start - interval.end >= 0","status":"Survived"},{"id":"141","location":{"end":{"column":77,"line":164},"start":{"column":13,"line":164}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"144","location":{"end":{"column":43,"line":164},"start":{"column":13,"line":164}},"mutatorName":"BinaryExpression","replacement":"interval.start - this.end > 0","status":"Survived"},{"id":"145","location":{"end":{"column":43,"line":164},"start":{"column":13,"line":164}},"mutatorName":"BinaryExpression","replacement":"interval.start - this.end < 0","status":"Survived"},{"id":"146","location":{"end":{"column":43,"line":164},"start":{"column":13,"line":164}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"147","location":{"end":{"column":43,"line":164},"start":{"column":13,"line":164}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"148","location":{"end":{"column":37,"line":164},"start":{"column":14,"line":164}},"mutatorName":"BinaryExpression","replacement":"interval.start + this.end","status":"Survived"},{"id":"149","location":{"end":{"column":77,"line":164},"start":{"column":47,"line":164}},"mutatorName":"BinaryExpression","replacement":"this.start - interval.end > 0","status":"Survived"},{"id":"152","location":{"end":{"column":77,"line":164},"start":{"column":47,"line":164}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"151","location":{"end":{"column":77,"line":164},"start":{"column":47,"line":164}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"154","location":{"end":{"column":10,"line":170},"start":{"column":80,"line":164}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"153","location":{"end":{"column":71,"line":164},"start":{"column":48,"line":164}},"mutatorName":"BinaryExpression","replacement":"this.start + interval.end","status":"Survived"},{"id":"150","location":{"end":{"column":77,"line":164},"start":{"column":47,"line":164}},"mutatorName":"BinaryExpression","replacement":"this.start - interval.end < 0","status":"Survived"},{"id":"155","location":{"end":{"column":101,"line":171},"start":{"column":18,"line":171}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"156","location":{"end":{"column":101,"line":171},"start":{"column":18,"line":171}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"157","location":{"end":{"column":101,"line":171},"start":{"column":18,"line":171}},"mutatorName":"BinaryExpression","replacement":"interval.start > this.end && interval.end > this.end || this.start < interval.start","status":"Survived"},{"id":"159","location":{"end":{"column":70,"line":171},"start":{"column":18,"line":171}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"158","location":{"end":{"column":70,"line":171},"start":{"column":18,"line":171}},"mutatorName":"BinaryExpression","replacement":"interval.start > this.end || interval.end > this.end","status":"Survived"},{"id":"163","location":{"end":{"column":43,"line":171},"start":{"column":18,"line":171}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"162","location":{"end":{"column":43,"line":171},"start":{"column":18,"line":171}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.end","status":"Survived"},{"id":"161","location":{"end":{"column":43,"line":171},"start":{"column":18,"line":171}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.end","status":"Survived"},{"id":"160","location":{"end":{"column":70,"line":171},"start":{"column":18,"line":171}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"164","location":{"end":{"column":43,"line":171},"start":{"column":18,"line":171}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"165","location":{"end":{"column":70,"line":171},"start":{"column":47,"line":171}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Survived"},{"id":"167","location":{"end":{"column":70,"line":171},"start":{"column":47,"line":171}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"166","location":{"end":{"column":70,"line":171},"start":{"column":47,"line":171}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Survived"},{"id":"171","location":{"end":{"column":101,"line":171},"start":{"column":74,"line":171}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"173","location":{"end":{"column":10,"line":181},"start":{"column":103,"line":171}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"169","location":{"end":{"column":101,"line":171},"start":{"column":74,"line":171}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Survived"},{"id":"168","location":{"end":{"column":70,"line":171},"start":{"column":47,"line":171}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"174","location":{"end":{"column":101,"line":182},"start":{"column":18,"line":182}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"175","location":{"end":{"column":101,"line":182},"start":{"column":18,"line":182}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"170","location":{"end":{"column":101,"line":171},"start":{"column":74,"line":171}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Survived"},{"id":"172","location":{"end":{"column":101,"line":171},"start":{"column":74,"line":171}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"178","location":{"end":{"column":74,"line":182},"start":{"column":18,"line":182}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"183","location":{"end":{"column":45,"line":182},"start":{"column":18,"line":182}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"181","location":{"end":{"column":45,"line":182},"start":{"column":18,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Survived"},{"id":"177","location":{"end":{"column":74,"line":182},"start":{"column":18,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.start > interval.start || this.start < interval.end","status":"Survived"},{"id":"182","location":{"end":{"column":45,"line":182},"start":{"column":18,"line":182}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"179","location":{"end":{"column":74,"line":182},"start":{"column":18,"line":182}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"180","location":{"end":{"column":45,"line":182},"start":{"column":18,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Survived"},{"id":"176","location":{"end":{"column":101,"line":182},"start":{"column":18,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.start > interval.start && this.start < interval.end || this.end > interval.end","status":"Survived"},{"id":"184","location":{"end":{"column":74,"line":182},"start":{"column":49,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.end","status":"Survived"},{"id":"188","location":{"end":{"column":101,"line":182},"start":{"column":78,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.end","status":"Survived"},{"id":"185","location":{"end":{"column":74,"line":182},"start":{"column":49,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.end","status":"Survived"},{"id":"186","location":{"end":{"column":74,"line":182},"start":{"column":49,"line":182}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"190","location":{"end":{"column":101,"line":182},"start":{"column":78,"line":182}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"187","location":{"end":{"column":74,"line":182},"start":{"column":49,"line":182}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"191","location":{"end":{"column":101,"line":182},"start":{"column":78,"line":182}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"189","location":{"end":{"column":101,"line":182},"start":{"column":78,"line":182}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.end","status":"Survived"},{"id":"192","location":{"end":{"column":10,"line":192},"start":{"column":103,"line":182}},"mutatorName":"Block","replacement":"{}","status":"Survived"}],"source":"class Interval {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end\n    }\n\n    // COMMAND CONSOLE FOR CODE COVERAGE \"node_modules/.bin/jest --coverage\"\n\n    toString() {\n        return \"[\" + this.start + \",\" + this.end + \"]\";\n    }\n\n    /**\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                  âââââââââââââââââââââââââââââ\n     *      interval1.overlaps(interval2) => true\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                       âââââââââââââââââââââââââââââ\n     *      interval1.overlaps(interval2) => false\n     *\n     * @param {Interval} interval\n     * @returns {boolean}\n     */\n    overlaps(interval) {\n        return this.end > interval.start && this.start < interval.end;\n    }\n\n    /**\n     * Retourne true si cet interval contient le paramÃ¨tre interval\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                  âââââââââââââ\n     *      interval1.includes(interval2) => true\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                              âââââââââââââââââââââââââââââ\n     *      interval1.includes(interval2) => false\n     *\n     * @param {Interval} interval\n     * @returns {boolean}\n     */\n    includes(interval) {\n        let res = Boolean;\n        if(this.start <= interval.start && this.end >= interval.end){\n            res = true;\n        } else {\n            res = false;\n        }\n        return res;\n    };\n\n    /**\n     * Retourne l'union de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                              âââââââââââââ\n     *      interval1.union(interval2) =>        âââââââââââââââââââââââââââââââââ\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                      âââââââââââââââââââââââââââââ\n     *      interval1.union(interval2) =>        âââââââââââââââââââââââââ   âââââââââââââââââââââââââââââ\n     *\n     * @param {Interval} interval\n     * @returns {Interval[]}\n     */\n    union(interval) {\n        let tab_interval = [];\n        let interFusion = new Interval();\n        // 2 intervals sont dissociÃ©s => \n        if(this.end <= interval.start || this.start >= interval.end) {\n            tab_interval.push(this);\n            tab_interval.push(interval);\n        // Exemple 1 (dans les 2 sens)\n        } \n        else if(this.end > interval.start) {\n            interFusion.start = this.start;\n            interFusion.end = interval.end;\n            tab_interval.push(interFusion);\n        } \n        else if(interval.end > this.start) {\n            interFusion.start = interval.start;\n            interFusion.end = this.end;\n            tab_interval.push(interFusion);\n        }\n        else if(this.start <= interval.start && this.end >= interval.end) {\n            interFusion.start = this.start;\n            interFusion.end = this.end;\n        }\n        else if(interval.start <= this.start && interval.end >= this.end) {\n            interFusion.start = interval.start;\n            interFusion.end = interval.end;\n        }\n\n        return tab_interval;\n    };\n\n    /**\n     * Retourne l'intersection de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                              âââââââââââââ\n     *      interval1.intersection(interval2) =>                     âââââ\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                      âââââââââââââââââââââââââââââ\n     *      interval1.intersection(interval2) => <tableau vide>\n     *\n     * @param {Interval} interval \n     * @returns {Interval|null}\n     */\n    intersection(interval) {\n        let tab_intersec = [];\n        let point = 0;\n        // cas NO intersection\n        if( (this.end-interval.start) < 0 || (interval.end-this.start) < 0 ) {\n            return tab_intersec;\n        }\n        // cas oÃ¹ les 2 intervals ont un point en commun\n        else if( (this.end-interval.start) === 0 ) {\n            return point = interval.start;\n        }\n        else if( (this.start-interval.end) === 0 ) {\n            return point = this.start;\n        }\n        // cas interection : THIS devant Interval\n        else if( (this.end-interval.start) > 0 ) {\n            return point = this.end-interval.start;\n        } \n        // cas intersection : Interval devant THIS\n        else if( (interval.start-this.end) > 0 ) { \n            return point = interval.end-this.start;\n        }\n    };\n\n    /**\n     * Retourne l'exclusion de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                              âââââââââââââ\n     *      interval1.exclusion(interval2) =>    ââââââââââââââââââââ     ââââââââ\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                      âââââââââââââââââââââââââââââ\n     *      interval1.exclusion(interval2) =>    âââââââââââââââââââââââââ   âââââââââââââââââââââââââââââ\n     *\n     * @param {Interval} interval\n     * @returns {Interval[]}\n     */\n    exclusion(interval) {\n        let tab_exclu = [];\n        const exclu1 = new Interval();\n        const exclu2 = new Interval();\n        if( (interval.start-this.end) >= 0 || (this.start-interval.end) >= 0 ) {\n            tab_exclu.push(this);\n            tab_exclu.push(interval);\n            console.log(this); console.log(interval);\n            console.log(tab_exclu);\n            return tab_exclu;\n        }\n        else if( interval.start > this.end && interval.end > this.end && this.start < interval.start) {\n            exclu1.start = this.start;\n            exclu1.end = interval.start;\n            exclu2.start = this.end;\n            exclu2.end = interval.end;\n            tab_exclu.push(exclu1);\n            tab_exclu.push(exclu2);\n            console.log(this); console.log(interval);\n            console.log(tab_exclu);\n            return tab_exclu;\n        }\n        else if( this.start > interval.start && this.start < interval.end && this.end > interval.end) {\n            exclu1.start = interval.start;\n            exclu1.end = this.start;\n            exclu2.start = interval.end;\n            exclu2.end = this.end;\n            tab_exclu.push(exclu1);\n            tab_exclu.push(exclu2);\n            console.log(this); console.log(interval);\n            console.log(tab_exclu);\n            return tab_exclu;\n        }\n    };\n}\n\nconst interval1 = new Interval(2,10);\nconst interval2 = new Interval(6,15);\n\nconsole.log(interval1.exclusion(interval2));\n\nmodule.exports = Interval;\n"},"/home/antoine/Bureau/MyGitHub/tp-jest/src/math.js":{"language":"javascript","mutants":[{"id":"197","location":{"end":{"column":6,"line":5},"start":{"column":18,"line":3}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"193","location":{"end":{"column":2,"line":16},"start":{"column":25,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"194","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"196","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"BinaryExpression","replacement":"n !== 0","status":"Killed"},{"id":"198","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"195","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"199","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"200","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"BinaryExpression","replacement":"n > 3000","status":"Killed"},{"id":"201","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"BinaryExpression","replacement":"n < 3000","status":"Killed"},{"id":"205","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"206","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"203","location":{"end":{"column":28,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"202","location":{"end":{"column":6,"line":9},"start":{"column":20,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"204","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"208","location":{"end":{"column":6,"line":13},"start":{"column":16,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"207","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"209","location":{"end":{"column":30,"line":12},"start":{"column":15,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"210","location":{"end":{"column":37,"line":15},"start":{"column":12,"line":15}},"mutatorName":"BinaryExpression","replacement":"n / Util.factorial(n - 1)","status":"Killed"},{"id":"211","location":{"end":{"column":36,"line":15},"start":{"column":31,"line":15}},"mutatorName":"BinaryExpression","replacement":"n + 1","status":"Killed"},{"id":"214","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"216","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"BinaryExpression","replacement":"n !== 1","status":"Killed"},{"id":"215","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"BinaryExpression","replacement":"n === 1 && n === 0","status":"Killed"},{"id":"212","location":{"end":{"column":2,"line":37},"start":{"column":29,"line":26}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"217","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"213","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"225","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"222","location":{"end":{"column":6,"line":29},"start":{"column":29,"line":27}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"218","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"219","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"BinaryExpression","replacement":"n !== 0","status":"Killed"},{"id":"224","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"223","location":{"end":{"column":21,"line":28},"start":{"column":16,"line":28}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"221","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"220","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"228","location":{"end":{"column":6,"line":32},"start":{"column":16,"line":30}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"226","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"232","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"BinaryExpression","replacement":"i >= n","status":"Killed"},{"id":"231","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"BinaryExpression","replacement":"i <= n","status":"Killed"},{"id":"233","location":{"end":{"column":31,"line":33},"start":{"column":28,"line":33}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Killed"},{"id":"227","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"230","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"229","location":{"end":{"column":50,"line":31},"start":{"column":15,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"234","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"237","location":{"end":{"column":18,"line":34},"start":{"column":13,"line":34}},"mutatorName":"BinaryExpression","replacement":"n * i","status":"Killed"},{"id":"238","location":{"end":{"column":38,"line":34},"start":{"column":33,"line":34}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"235","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"236","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"BinaryExpression","replacement":"n % i !== 0","status":"Killed"},{"id":"240","location":{"end":{"column":2,"line":57},"start":{"column":29,"line":49}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"241","location":{"end":{"column":26,"line":51},"start":{"column":20,"line":51}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"239","location":{"end":{"column":16,"line":35},"start":{"column":12,"line":35}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"242","location":{"end":{"column":26,"line":51},"start":{"column":20,"line":51}},"mutatorName":"BinaryExpression","replacement":"i < n","status":"Survived"},{"id":"244","location":{"end":{"column":31,"line":51},"start":{"column":28,"line":51}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Killed"},{"id":"245","location":{"end":{"column":6,"line":55},"start":{"column":33,"line":51}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"243","location":{"end":{"column":26,"line":51},"start":{"column":20,"line":51}},"mutatorName":"BinaryExpression","replacement":"i > n","status":"Killed"},{"id":"246","location":{"end":{"column":27,"line":52},"start":{"column":12,"line":52}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"248","location":{"end":{"column":10,"line":54},"start":{"column":29,"line":52}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"247","location":{"end":{"column":27,"line":52},"start":{"column":12,"line":52}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"249","location":{"end":{"column":26,"line":53},"start":{"column":19,"line":53}},"mutatorName":"BinaryExpression","replacement":"sum - i","status":"Killed"},{"id":"250","location":{"end":{"column":2,"line":88},"start":{"column":29,"line":71}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"253","location":{"end":{"column":26,"line":73},"start":{"column":20,"line":73}},"mutatorName":"BinaryExpression","replacement":"j > n","status":"Killed"},{"id":"251","location":{"end":{"column":26,"line":73},"start":{"column":20,"line":73}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"252","location":{"end":{"column":26,"line":73},"start":{"column":20,"line":73}},"mutatorName":"BinaryExpression","replacement":"j < n","status":"Killed"},{"id":"257","location":{"end":{"column":23,"line":74},"start":{"column":12,"line":74}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"258","location":{"end":{"column":23,"line":74},"start":{"column":12,"line":74}},"mutatorName":"BinaryExpression","replacement":"j % 15 != 0","status":"Killed"},{"id":"256","location":{"end":{"column":23,"line":74},"start":{"column":12,"line":74}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"255","location":{"end":{"column":6,"line":86},"start":{"column":32,"line":73}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"260","location":{"end":{"column":10,"line":76},"start":{"column":25,"line":74}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"261","location":{"end":{"column":36,"line":75},"start":{"column":26,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"259","location":{"end":{"column":18,"line":74},"start":{"column":12,"line":74}},"mutatorName":"BinaryExpression","replacement":"j * 15","status":"Killed"},{"id":"262","location":{"end":{"column":27,"line":77},"start":{"column":17,"line":77}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"264","location":{"end":{"column":27,"line":77},"start":{"column":17,"line":77}},"mutatorName":"BinaryExpression","replacement":"j % 5 != 0","status":"Killed"},{"id":"265","location":{"end":{"column":22,"line":77},"start":{"column":17,"line":77}},"mutatorName":"BinaryExpression","replacement":"j * 5","status":"Killed"},{"id":"263","location":{"end":{"column":27,"line":77},"start":{"column":17,"line":77}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"266","location":{"end":{"column":10,"line":79},"start":{"column":29,"line":77}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"267","location":{"end":{"column":32,"line":78},"start":{"column":26,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"268","location":{"end":{"column":27,"line":80},"start":{"column":17,"line":80}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"270","location":{"end":{"column":27,"line":80},"start":{"column":17,"line":80}},"mutatorName":"BinaryExpression","replacement":"j % 3 != 0","status":"Killed"},{"id":"269","location":{"end":{"column":27,"line":80},"start":{"column":17,"line":80}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"271","location":{"end":{"column":22,"line":80},"start":{"column":17,"line":80}},"mutatorName":"BinaryExpression","replacement":"j * 3","status":"Killed"},{"id":"272","location":{"end":{"column":10,"line":82},"start":{"column":29,"line":80}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"273","location":{"end":{"column":32,"line":81},"start":{"column":26,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"274","location":{"end":{"column":10,"line":85},"start":{"column":14,"line":83}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"254","location":{"end":{"column":31,"line":73},"start":{"column":28,"line":73}},"mutatorName":"PostfixUnaryExpression","replacement":"j--","status":"RuntimeError"}],"source":"let Util = {};\nUtil.factorial = (n) => {\n    if (n === 0) {\n        return 1;\n    }\n\n    if (n >= 3000) {\n        throw 'n too large'\n    }\n\n    if (n < 0) {\n        throw 'n is negative'\n    }\n\n    return n * Util.factorial(n - 1);\n};\n\n/**\n * DÃ©termine si n est un nombre premier.\n * Util.isPrime(5) => false\n * Util.isPrime(6) => true\n *\n * @param {number} n\n * @returns {boolean}\n */\nUtil.isPrime = function (n) {\n    if (n === 1 || n === 0) {\n        return false;\n    }\n    if (n < 0) {\n        throw 'Unable to compute prime for n < 0'\n    }\n    for (var i = 2; i < n; i++)\n        if (n % i === 0) return false;\n    return true;\n\n};\n\n\n/**\n * Additionne l'ensemble des nombres premiers de 2 Ã  n\n *\n * Util.sumPrime(6) = 2 + 3 + 5 = 10\n * Util.sumPrime(8) = 2 + 3 + 5 + 7 = 17\n *\n * @param {number} n\n * @returns {number}\n */\nUtil.sumPrime = function(n) {\n    let sum = 0;\n    for(let i = 2; i <= n; i++) {\n        if(Util.isPrime(i)) {\n            sum = sum + i;\n        }\n    }\n    return sum;\n};\n\n/**\n * Cette mÃ©thode doit retourner un tableau de 1 Ã  n tel que:\n * - Pour les nombres multiples de 3, les remplacer par \"Fizz\"\n * - Pour les nombres multiples de 5, les remplacer par \"Buzz\"\n * - Pour les nombres multiples de 3 et 5, les remplacer par \"FizzBuzz\"\n *\n * Exp :\n * Util.fizzBuzz(15) => [1, 2, \"Fizz\", 4, \"Buzz\", \"Fizz\", 7, 8, \"Fizz\", \"Buzz\", 11, \"Fizz\", 13, 14, \"FizzBuzz\"]\n *\n * @param {number} n\n * @returns {array}\n */\nUtil.fizzBuzz = function(n) {\n    let mon_tab = [];\n    for(let j = 1; j <= n; j++){\n        if(j % 15 == 0) {\n            mon_tab.push(\"FizzBuzz\");\n        }\n        else if(j % 5 == 0) {\n            mon_tab.push(\"Buzz\");\n        }\n        else if(j % 3 == 0) {\n            mon_tab.push(\"Fizz\");\n        }\n        else {\n            mon_tab.push(j);\n        }\n    } \nreturn mon_tab;\n};\n\n\n/**\n * Chiffre une phrase selon la rÃ¨gle suivante : Les A deviennent des B, les B des C, etc.\n *\n * Exp :\n * Util.cipher(\"Test Unitaire\") => \"Uftu Tojubjsf\"\n *\n * @param phrase\n * @returns {string}\n */\nUtil.cipher = function (phrase) {\n\n};\n\n\nmodule.exports = Util;\n\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};